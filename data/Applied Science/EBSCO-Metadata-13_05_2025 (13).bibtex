@article{11039808220151101,
 abstract  = "Although there have been many advances in end-user programming environments, recent empirical studies report that programming still remains difficult for end-users. We hypothesize that one reason may be lack of effective support for helping end-user programmers problem-solve their own way around barriers they encounter. Therefore, in this paper, we describe the Idea Garden, a concept designed to help end-user programmers generate new ideas and problem-solve when they run into barriers. The Idea Garden has its roots in Minimalist Learning Theory and problem-solving theories. Our proof-of-concept prototype of the Idea Garden concept in the CoScripter end-user programming environment currently targets three barriers reported in end-user programming literature. It does so using an integrated, just-in-time combination of scaffolding for problem-solving strategies, for design patterns and for programming concepts. Our empirical results showed that this approach helped end-user programmers o",
 author    = "JILL CAO and FLEMING, SCOTT D. and BURNETT, MARGARET and SCAFFIDI, CHRISTOPHER",
 number    = "6",
 title     = "Idea Garden: Situated Support for Problem Solving by End-User Programmers.",
 volume    = "27",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=9cfb722a-16bf-33c9-957e-8e5a011095c8",
 year      = "2015",
 issn      = "09535438",
 journal   = "Interacting with Computers",
 keywords  = "Computer programming management; Computer programmers; Problem solving; Other Computer Related Services; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Interactive learning; Nonformal education",
 pages     = "640-660",
 note      = "",
}

@misc{14474120220200801,
 abstract     = "Excerpts from several blog posts posted on the website for the journal "Communications of the ACM" are presented, which cover topics including how computational thinking is impacting the music industry and how World War II was won by the Allies.",
 author       = "Arquilla, John and Roschelle, Jeremy",
 title        = "How WWII Was Won, and Why CS Students Feel Unappreciated.",
 url          = "https://research.ebsco.com/linkprocessor/plink?id=b2ddb407-3050-3e46-92b6-8ebf3163f03e",
 year         = "2020",
 keywords     = "Music &amp; technology; Allied Powers (1919- ); World War II",
 note         = "",
 howpublished = "${howpublished}",
}

@inproceedings{8790448820130201,
 abstract     = "Software engineering project courses where student teams are geographically distributed can effectively simulate the problems of globally distributed software development (DSD). However, this pedagogical model has proven difficult to adopt or sustain. It requires significant pedagogical resources and collaboration infrastructure. Institutionalizing such courses also requires compatible and reliable teaching partners. The purpose of this workshop is to continue building on our outreach efforts to foster a community of international faculty and institutions committed to developing, teaching and researching DSD. Foundational materials presented will include pedagogical materials and infrastructure developed and used in teaching DSD courses along with results and lessons learned. The third CTGDSD workshop will also focus on publishing workshop results and collaborating with the larger DSD community. Longrange goals include: lowering adoption barriers by providing common pedagogical materi",
 address      = "",
 author       = "Faulk, Stuart and Young, Michal and Prikladnicki, Rafael and Weiss, David M. and Lian Yu",
 number       = "null",
 publisher    = "null",
 series       = "null",
 title        = "3rd International Workshop on Collaborative Teaching of Globally Distributed Software Development (CTGDSD 2013).",
 volume       = "null",
 url          = "https://research.ebsco.com/linkprocessor/plink?id=ceb5b542-cc2e-3023-a9a3-f665da53fb0e",
 year         = "2013",
 keywords     = "Software engineers; Software engineering; Computer software industry; Computer and software stores; Software Publishers; Software publishers (except video game publishers); Computer, computer peripheral and pre-packaged software merchant wholesalers; Computer and Computer Peripheral Equipment and Software Merchant Wholesalers; Convention and Trade Show Organizers; Adult education workshops; Computer software conferences; Conferences &amp; conventions",
 pages        = "1515-1516",
 booktitle    = "ICSE: International Conference on Software Engineering",
 edition      = "null",
 note         = "",
 organization = "${organization}",
}

@article{18218309820250401,
 abstract  = "K-12 AI education not only equips students with AI literacy but also encourages underrepresented groups to pursue further studies or careers in this field. Secondary students were particularly well-suited for comprehensive AI education due to their cognitive characteristics and developmental readiness. While most studies have focused on developing pedagogy, curriculum, and tools for secondary AI education, they have prioritized measuring students' learning outcomes over literacy development. Referring to the empirical research on secondary AI education as well as Piaget's Epistemology and Bloom's Taxonomy, this study figured out a KAT framework that constitutes AI literacy: (1) AI Knowledge (AI fundamentals, elements of AI technology, application of AI technology), (2) AI Affectivity (AI and human, AI and society), and (3) AI Thinking (engineering design thinking, computational thinking). Based on this, a 57-item AI literacy scale (AILS) was developed, and 56 items were retained after",
 author    = "Zhong, Baichang and Liu, Xiaofan",
 number    = "null",
 title     = "Evaluating AI literacy of secondary students: Framework and scale development.",
 volume    = "227",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=0c550812-1b8d-3103-a8ef-225577ca403e",
 year      = "2025",
 issn      = "03601315",
 journal   = "Computers &amp; Education",
 keywords  = "Information literacy education; Exploratory factor analysis; Confirmatory factor analysis; Bloom's taxonomy; Chinese-speaking students",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{7359003120110521,
 abstract  = "Software engineering project courses where student teams are geographically distributed can effectively simulate the problems of globally distributed software development (DSD). However, this pedagogical model has proven difficult to adopt or sustain. It requires significant pedagogical resources and collaboration infrastructure. Institutionalizing such courses also requires compatible and reliable teaching partners. The purpose of this workshop is to foster a community of international faculty and institutions committed to developing, supporting, and teaching DSD. Foundational materials presented will include pedagogical materials and infrastructure developed and used in teaching DSD courses along with results and lessons learned. Long-range goals include: lowering adoption barriers by providing common pedagogical materials, validated collaboration infrastructure, and a pool of potential teaching partners from around the globe.",
 author    = "Faulk, Stuart and Young, Michal and Weiss, David and Yu, Lian",
 number    = "null",
 title     = "Collaborative teaching of globally distributed software development.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=050aabe6-fb3d-3abd-b7ae-6e325f2548bc",
 year      = "2011",
 issn      = "",
 journal   = "ICSE: International Conference on Software Engineering",
 keywords  = "",
 pages     = "1208-1209",
 note      = "",
}

@article{7358386220100501,
 abstract  = "This workshop will explore the contributions that software research can make to the challenge of tackling climate change. Software is a critical enabling technology in nearly all aspects of climate change, from the computational models used by climate scientists to improve our understanding of the impact of human activities on earth systems, through to the information and control systems needed to build an effective carbon-neutral society. The intent of the workshop is to explore how software research can contribute to this challenge, to build a community of researchers interested in responding to the challenge, and to map out a research agenda.",
 author    = "Easterbrook, Steve and Mens, Kim and Zschaler, Steffen",
 number    = "null",
 title     = "Second International Workshop on Software Research and Climate Change.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=e96202aa-83fe-34a8-987a-8aca266189ad",
 year      = "2010",
 issn      = "",
 journal   = "ICSE: International Conference on Software Engineering",
 keywords  = "",
 pages     = "449-450",
 note      = "",
}

@article{10851433720150801,
 abstract  = "The article suggests to incorporate creative thinking into the cirriculum in order to improve learning and achievement in computer science. The Generativity Theory of R. Epstein breaks creative thinking down to four core competencies: broadening, challenging, surrounding and capturing. The representation of these competencies in cognitive and neuroscience research is described. Also discussed is the integration of computational and creative thinking to form computational creativity.",
 author    = "Soh, Leen-Kiat and Shell, Duane F. and Ingraham, Elizabeth and Ramsay, Stephen and Moore, Brian",
 number    = "8",
 title     = "Learning Through Computational Creativity.",
 volume    = "58",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=2b950db0-2a4b-318d-9d25-c05c29cffb85",
 year      = "2015",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "Neurosciences; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Creative thinking education; Computer science education; Learning strategies; Academic achievement; Cognitive science",
 pages     = "33-35",
 note      = "",
}

@article{9877527520140601,
 abstract  = "Recent studies in learning programming have largely focused on high school and college students; less is known about how young children learn to program. From video data of 20 students using a graphical programming interface, we identified ideas that were shared and evolved through an elementary school classroom. In mapping these ideas and their resulting changes in programs and outputs, we were able to identify the contextual features which contributed to how ideas moved through the classroom as students learned. We suggest this process of idea mapping in visual programming environments as a viable method for understanding collaborative, constructivist learning as well as a context under which experiences can be developed to improve student learning.",
 author    = "Harlow, Danielle Boyd and Leak, Anne Emerson",
 number    = "2/3",
 title     = "Mapping students’ ideas to understand learning in a collaborative programming environment.",
 volume    = "24",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=f3ebb93e-d939-3c84-aeca-4e6cc143becc",
 year      = "2014",
 issn      = "08993408",
 journal   = "Computer Science Education",
 keywords  = "Computer programming; Visual programming (Computer science); Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Elementary and Secondary Schools; Custom Computer Programming Services; Other Computer Related Services; Computer systems design and related services (except video game design and development); Computer science education; Higher education; Secondary education; Collaborative learning; Learning ability",
 pages     = "229-247",
 note      = "",
}

@article{14459907820180101,
 abstract  = "The ability to understand how software work is becoming increasingly relevant and calls have been made to help students further develop their computational thinking skills. However, research has shown that learning to program is a challenging task, particularly for non-computer science majors. Seeking to address these issues, this research asks the question: "how can we design a course curriculum to teach the fundamentals of programming to IS undergraduate students?" We draw from pedagogical theory and literature on distributed leadership to design a course that aims at helping IS students learn the fundamentals of programming and leverage digital artifacts - Python, Jupyter Notebook, and GitHub to enhance students' awareness of programming as a collaborative and social endeavor. We contribute to the literature on teaching non-programmers to program and offers digital artifacts as a means to transform what has traditionally been perceived by students as a challenging activity into a p",
 author    = "Vial, Gregory and Negoita, Bogdan",
 number    = "null",
 title     = "Teaching Programming to Non-Programmers: The Case of Python and Jupyter Notebooks.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=b5b7dac6-ef02-3a6c-9bff-4b752f233387",
 year      = "2018",
 issn      = "",
 journal   = "Proceedings of the International Conference on Information Systems (ICIS)",
 keywords  = "Python programming language; Software engineering; Computer science; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Research and development in the  physical, engineering and life sciences; Information systems education; Curriculum planning",
 pages     = "1-17",
 note      = "",
}

@article{17644113020240601,
 abstract  = "Software Engineering is dedicated to the systematic and efficient development of software, which necessitates the active participation of all team members and a recognition of their unique skills and abilities, including those with autism spectrum disorders (ASD). The inclusion of individuals with ASD presents new perspectives, yet there is a lack of systematic evidence regarding the primary obstacles and potential benefits associated with their inclusion. This paper aims to identify, characterize, and describe barriers, facilitators, and methodological proposals described by the community to include individuals with ASD in the discipline of Software Engineering. We conducted a comprehensive systematic multivocal mapping study to evaluate the existing evidence on the inclusion of individuals with ASD in Software Engineering. We obtained 34 primary studies from which we identified the main facilitators of motivation to learn new skills, attention to detail, and the ability to report an",
 author    = "Márquez, Gastón and Pacheco, Michelle and Astudillo, Hernán and Taramasco, Carla and Calvo, Esteban",
 number    = "null",
 title     = "Inclusion of individuals with autism spectrum disorder in Software Engineering.",
 volume    = "170",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=7e6308a8-413d-3525-8886-978d3ead6bc9",
 year      = "2024",
 issn      = "09505849",
 journal   = "Information &amp; Software Technology",
 keywords  = "Computer software development; Sensorimotor integration; Virtual reality; Custom Computer Programming Services; Computer systems design and related services (except video game design and development); Autism spectrum disorders; Social skills",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{50157062220100201,
 abstract  = "The writer discusses the importance of informatics. The foundation of science, industry, and ultimately, the success of society is computing, and it is no longer owned solely by computer science. Computing and computational thinking have become ubiquitous, and are embedded in all aspects of science, research, industry, government, and social interaction. Informatics serves as a discipline that provides solutions to problems through the application of computing or computation, in the context of the domain of the problem.",
 author    = "Groth, Dennis P. and MacKie-Mason, Jeffrey K.",
 number    = "2",
 title     = "Why an Informatics Degree?",
 volume    = "53",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=82661782-fe09-3112-b160-bf74aa8bf324",
 year      = "2010",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "Indiana University; University of Michigan; University of Pennsylvania; Information science education; College curriculum; Information science; Computer science; Computer programming; Interdisciplinary education; Economics; Biology; Information technology",
 pages     = "26-28",
 note      = "",
}

@article{50138526520090201,
 abstract  = "Computational thinking (CT) should be taught in schools as a skill on par with reading, writing, and arithmetic in order to improve computer science education. Computer science has great difficulties attracting students, even though the IT industry is continually growing. It is suggested that laying the foundations of CT long before students experience their first programming language will help systematic and efficient processing of information and tasks. The focus in this drive will be on developing the computing skills of the students before they engage in software programming tasks.",
 author    = "Fletcher, George H. L. and Lu, James J.",
 number    = "2",
 title     = "Education—Human Computing Skills: Rethinking the K-12 Experience.",
 volume    = "52",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=479be6ed-9a50-31e0-b5fe-064f3369aa2b",
 year      = "2009",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "United States; Computer science education; Thought &amp; thinking; Cognition; Education; High technology industries; Computer training; Computer industry; United States education system; Bachelor of arts degree; Bachelor of science degree; Stock Market Bubble, 1995-2000; Abstract thought; Euclidean algorithm; Wing, Jeannette",
 pages     = "23-25",
 note      = "",
}

@article{13281767520181001,
 abstract  = "In the traditional educational understanding, individuals follow the path of getting graduate or post-graduate education if they wish, after continuing their education from kindergarten to high school. Today, by getting out of this stereotype, every literate person can choose different learning environments. Now, learning any subject is up to the tip of the fingers of an individual without depending on a school building with four walls or on certain time frame. In this study, it is aimed to verify digital certificates given to the participants at the Turkish stage of the International Informatics and Computational Thinking event by using Ethereum Block Chain based smart contract. The tasks in the event were transmitted to the students in Turkey via using exam module of the Moodle Learning Management System. For this study, first a smart contract was developed in which the certificate information could be stored on the Ethereum blockchain and could be check for control purposes if nece",
 author    = "KARATAŞ, Erinç",
 number    = "4",
 title     = "Moodle Öğrenme Yönetim Sistemi için Ethereum Blok Zinciri Tabanlı Belge Doğrulama Akıllı Sözleşmesinin Geliştirilmesi.",
 volume    = "11",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=d567ab60-1fdd-3e50-a182-c5598bcea529",
 year      = "2018",
 issn      = "13079697",
 journal   = "International Journal of InformaticsTechnologies",
 keywords  = "",
 pages     = "399-406",
 note      = "",
}

@article{13131004920180901,
 abstract  = "The article focuses on the engineering design and coding through unmanned aerial vehicles quadcopters. It includes information on the significance of computational programming, coding, and analytical thinking in engineering education and occupations. It also offers information on the use of coding application Tynker for iPad for designing autonomous flight vehicles.",
 author    = "Weitlauf, John and Bartholomew, Scott R. and Liwei Zhang",
 number    = "1",
 title     = "engineering design and coding through quadcopters.",
 volume    = "78",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=faeba57c-9e92-390d-ad47-6dfac1978529",
 year      = "2018",
 issn      = "21580502",
 journal   = "Technology &amp; Engineering Teacher",
 keywords  = "Drone aircraft; Engineering design; Computer programming; Mobile apps; Engineering Services; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Other Computer Related Services; Engineering design education; iPads",
 pages     = "14-21",
 note      = "",
}

@article{9739842720140601,
 abstract  = "The article offers information on the elusiveness of empathy design in corporate and enterprise Information Technology (IT). Topics discussed include construction of computational thinking along with mentioning the traditional software development lifecycle (SDLC), role of computers in computational thinking, and several technologies and methods to be employed at an enterprise level to solve enterprise problems including dynamic modeling of requirements and business user proto-cycling.",
 author    = "Trefler, Alan",
 number    = "6/7",
 title     = "Empathy for Business.",
 volume    = "27",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=37602e7b-e188-34ad-86f6-7cea31a72a6c",
 year      = "2014",
 issn      = "",
 journal   = "Cutter IT Journal",
 keywords  = "Information technology; Computer software development; Computer systems; Custom Computer Programming Services; Computer systems design and related services (except video game design and development); Computer Systems Design Services; Empathy; Business enterprises",
 pages     = "28-32",
 note      = "",
}

@misc{13590573120190501,
 abstract     = "The article presents an excerpt from the book "Computational Thinking" by Peter J. Denning and Matti Tedre regarding computational thinking.",
 author       = "Denning, Peter J. and Tedre, Matti",
 title        = "Thinking Like a Computer.",
 url          = "https://research.ebsco.com/linkprocessor/plink?id=0ac7875c-3b72-33e2-862b-5f61bf3c81cc",
 year         = "2019",
 keywords     = "Computational Thinking (Book); Denning, Peter J.; Tedre, Matti",
 note         = "",
 howpublished = "${howpublished}",
}

@article{10111964020150301,
 abstract  = "The article describes Computer Science Unplugged, an activity program designed to teach introductory computer science concepts including parity and error detection, computational thinking, and data compression to children.",
 author    = "Cortina, Thomas J.",
 number    = "3",
 title     = "Reaching a Broader Population of Students through “Unplugged” Activities.",
 volume    = "58",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=b6a99bbf-98f2-33c5-b9e3-2af5e859de54",
 year      = "2015",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "Error-correcting codes; Data compression; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Computer science education; Elementary education",
 pages     = "25-27",
 note      = "",
}

@article{14190398020200401,
 abstract  = "Computational thinking and coding are becoming an integral part of K-12 education, with female students being underrepresented in such subjects. The proliferation of technological tools and programming environments offers the opportunity for creative coding activities for children and increases the need for appropriate instructional practices. In this study, we design and evaluate a coding workshop for children. Our goal is to examine differences between boys and girls using eye-tracking as an objective measure and triangulating the findings with qualitative data coming from children's interviews. The results show no statistically significant difference between female and male gaze and learning gain during the coding activity; interestingly, the qualitative data show differences in the strategies and implemented practices during coding, and in perceptions about those coding activities. Our results highlight that further studies need to utilize objective measures and unveil necessary d",
 author    = "Papavlasopoulou, Sofia and Sharma, Kshitij and Giannakos, Michail N.",
 number    = "null",
 title     = "Coding activities for children: Coupling eye-tracking with qualitative data to investigate gender differences.",
 volume    = "105",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=a7b1258a-4af9-3432-b887-ba886323563d",
 year      = "2020",
 issn      = "07475632",
 journal   = "Computers in Human Behavior",
 keywords  = "User interfaces; Eye movement measurements; Child behavior; Creative ability; Interviewing; Learning strategies; Research evaluation; Sex distribution; Thought &amp; thinking; Adult education workshops",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{7965085820120401,
 abstract  = "Novice learners find motion as a continuous process of change challenging to understand. In this paper, we present a pedagogical approach based on agent-based, visual programming to address this issue. Integrating agent-based programming, in particular, Logo programming, with curricular science has been shown to be challenging in previous research on educational computing. We present a new Logo-based visual programming language-ViMAP-and, a sequence of learning activities involving programming and modeling, designed specifically to support seamless integration between programming and learning kinematics. We describe relevant affordances of the ViMAP environment that supports such seamless integration. We then present ViMAP-MoMo, a curricular unit designed in ViMAP for modeling kinematics, for a wide range of students (elementary-high school). Finally, we describe in detail a sequence of learning activities in three phases, discuss the underlying rationale for each phase, and where rel",
 author    = "Sengupta, Pratim and Farris, Amy and Wright, Mason",
 number    = "1/2",
 title     = "From Agents to Continuous Change via Aesthetics: Learning Mechanics with Visual Agent-based Computational Modeling.",
 volume    = "17",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=81f00ee1-2465-3733-8a43-b7bdc3dcf663",
 year      = "2012",
 issn      = "22111662",
 journal   = "Technology, Knowledge &amp; Learning",
 keywords  = "Visual programming (Computer science); Kinematics; Aesthetics; Learning; Physics education; Project method in teaching",
 pages     = "23-42",
 note      = "",
}

@article{4317880120090801,
 abstract  = "Abstract: 3D game development can be an enticing way to attract K-12 students to computer science, but designing and programming 3D games is far from trivial. Students need to achieve a certain level of 3D fluency in modeling, animation, and programming to be able to create compelling 3D content. The combination of innovative end-user development tools and standards-based curriculum that promotes IT fluency by shifting the pedagogical focus from programming to design, can address motivational aspects without sacrificing principled educational goals. The AgentCubes 3D game-authoring environment raises the ceiling of end-user development without raising the threshold. Our formal user study shows that with Incremental 3D, the gradual approach to transition from 2D to 3D authoring, middle school students can build sophisticated 3D games including 3D models, animations, and programming.",
 author    = "Ioannidou, Andri and Repenning, Alexander and Webb, David C.",
 number    = "4",
 title     = "AgentCubes: Incremental 3D end-user development",
 volume    = "20",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=1929cabd-d3e5-35d7-acd6-a23a32b503f0",
 year      = "2009",
 issn      = "1045926X",
 journal   = "Journal of Visual Languages &amp; Computing",
 keywords  = "Computer game programming; End-user computing; Three-dimensional display systems; Visual programming (Computer science); Information technology; Computer-generated imagery; Educational objectives",
 pages     = "236-251",
 note      = "",
}

@article{16152582520230101,
 abstract  = "Biomedical science students need to learn to code. Graduates face a future where they will be better prepared for research higher degrees and the workforce if they can code. Embedding coding in a biomedical curriculum comes with challenges. First, biomedical science students often experience anxiety learning quantitative and computational thinking skills and second biomedical faculty often lack expertise required to teach coding. In this study, we describe a creative coding approach to building coding skills in students using the packages of Processing and Arduino. Biomedical science students were taught by an interdisciplinary faculty team from Medicine and Health, Science and Architecture, Design and Planning. We describe quantitative and qualitative responses of students to this approach. Cluster analysis revealed a diversity of student responses, with a large majority of students who supported creative coding in the curriculum, a smaller but vocal cluster, who did not support crea",
 author    = "Gough, Phillip and Bown, Oliver and Campbell, Craig R. and Poronnik, Philip and Ross, Pauline M.",
 number    = "1",
 title     = "Student responses to creative coding in biomedical science education.",
 volume    = "51",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=eab959b0-1073-3161-b63e-97777d7546d8",
 year      = "2023",
 issn      = "14708175",
 journal   = "Biochemistry &amp; Molecular Biology Education",
 keywords  = "Medical sciences; Science students; Discharge planning; Science education; Capstone courses; Minority students",
 pages     = "44-56",
 note      = "",
}

@article{13649905420190901,
 abstract  = "In recent years, there has been a push to introduce coding and computational thinking in early childhood education, and robotics is an excellent tool to achieve this. However, the integration of these fundamental skills into formal and official curriculums is still a challenge and educators needs pedagogical perspectives to properly integrate robotics, coding and computational thinking concepts into their classrooms. Thus, this study evaluates a "coding as a playground" experience in keeping with the Positive Technological Development (PTD) framework with the KIBO robotics kit, specially designed for young children. The research was conducted with preschool children aged 3–5 years old (N = 172) from three Spanish early childhood centers with different socio-economic characteristics and teachers of 16 classes. Results confirm that it is possible to start teaching this new literacy very early (at 3 years old). Furthermore, the results show that the strategies used promoted communication",
 author    = "Bers, Marina U. and González-González, Carina and Armas–Torres, Mª Belén",
 number    = "null",
 title     = "Coding as a playground: Promoting positive learning experiences in childhood classrooms.",
 volume    = "138",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=a6f432da-5baa-33b0-ac16-192c20095e6d",
 year      = "2019",
 issn      = "03601315",
 journal   = "Computers &amp; Education",
 keywords  = "Research and Development in the Social Sciences and Humanities; Psychology of teachers; Preschool children; Early childhood education; Social sciences education; Children; Adult child abuse victims",
 pages     = "130-145",
 note      = "",
}

@article{9428224320140201,
 abstract  = "The article focuses on computer science and coding education. It states that demand in the U.S. for computer scientists and technical professionals is forecast to grow by 34 percent through 2018 and mentions a study that found many people were programming without realizing it by creating database queries using SQL or creating macros for spreadsheets. It comments on the need for people to learn computational thinking to think abstractly and learning problem-solving skills in computer science. It talks about the state of computer science in public education, reporting that only 12 percent of U.S. high schools offer computer science courses, and speculates on the benefits of teaching computer science concepts starting at age five or six.",
 author    = "Shein, Esther",
 number    = "2",
 title     = "Should Everybody Learn to Code?",
 volume    = "57",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=18e2de61-b00b-3d6d-98ce-ff375fc220f7",
 year      = "2014",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "SQL; Problem solving; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Research and development in the  physical, engineering and life sciences; Computer Training; Elementary and Secondary Schools; Other Computer Related Services; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Computer programming education; Computer science education; Labor demand; Computer training; High schools; Public schools; Abstract thought",
 pages     = "16-18",
 note      = "",
}

@article{12936054620180301,
 abstract  = "This essay deals with a training experience for the Degree Course on Primary Education Sciences (Scienze della Formazione Primaria), at the University of Perugia. Fifth year students have been given a laboratory about coding and computational thinking, in a mixed methodology made of the face-to-face and online forms. This is also in relation to actions 17 and 27 of the National Plan for the Digital School. Results of the assessment activities taken in the laboratory are hereby presented. They show a good level of teaching-design competence of the students about coding.",
 author    = "Falcinelli, Floriana and Sabatini, Martina and Nini, Elisa",
 number    = "1",
 title     = "Pre-teachers training in digital competence: a workshop experience on coding.",
 volume    = "18",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=7066b376-c285-3e27-8416-e77a36c1ad65",
 year      = "2018",
 issn      = "18257321",
 journal   = "Form@re",
 keywords  = "Computers in education; Primary education; Teacher training",
 pages     = "311-322",
 note      = "",
}

@article{12683461820171201,
 abstract  = "Parquet Deformation is an architectural studio exercise introduced by William Huff in 1960s. It aims to improve students’ reasoning of spatiotemporal variation by utilizing sequential shapeshifting of patterns. This article examines the outcomes of this educational research from a perspective of design computing with a purpose to remark its pedagogical significance. A multilayered reading about the exercise will reveal its historical, theoretical, and artistic backgrounds. Then the common structural elements and different construction approaches are explained along with a novel design and analysis method. The proposed method embeds variations of two-dimensional pattern deformations on a third dimension. It enables various analyses such as the measurement of regularity and locating the attractor points. This study is expected to exemplify how computational thinking and new digital tools change the way designers would approach to such systematic compositions.",
 author    = "Yazar, Tuğrul",
 number    = "4",
 title     = "Revisiting Parquet Deformations from a computational perspective: A novel method for design and analysis.",
 volume    = "15",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=fcd42842-fea1-3e73-89a7-bd8ba806301a",
 year      = "2017",
 issn      = "14780771",
 journal   = "International Journal of Architectural Computing",
 keywords  = "Architectural history; Computer-aided design; Computers in architecture; Architectural design; Spatiotemporal processes; Architecture &amp; technology; Computer Systems Design Services; Twentieth century; Huff, William",
 pages     = "250-267",
 note      = "",
}

@article{12650457420171201,
 abstract  = "The article evaluates a decision made in Maryland to allow substitution of computer science (CS) courses for technology education required credit in high schools. It highlights the mismatch between the CS courses and the state definition of technological literacy. It suggests that computational thinking can be adapted into technology and engineering education where it fits rather than as a wholesale substitution.",
 author    = "Buckler, Chris and Koperski, Kevin and Loveland, Thomas R.",
 number    = "4",
 title     = "is computer science compatible with technological literacy?",
 volume    = "77",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=fc85739d-2faa-3a4a-875c-3daf6f5826e2",
 year      = "2017",
 issn      = "21580502",
 journal   = "Technology &amp; Engineering Teacher",
 keywords  = "Engineering education; STEM education; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Research and development in the  physical, engineering and life sciences; Elementary and Secondary Schools; Computer science education; Secondary education; Technology education; Curriculum",
 pages     = "15-20",
 note      = "",
}

@article{13900448720170701,
 abstract  = "Recent studies have shown that EFL/ESL skills, in general, and ESP skills, in particular, are better developed when modern and innovative student-centered teaching and learning methods and techniques are employed, such as the communicative approach, cooperative teaching and learning, creative teaching and teaching for creativity, contextual learning, cross-over learning, computational thinking, adaptive teaching, embodied learning, etc. The purpose of this paper is to underline the efficiency of cooperative learning, compared to traditional teaching methods, in developing the students' ESP speaking skills. This paper is part of an experimental study conducted on two groups of students whose major is Business Economics (first year of study), over a period of one month, in the first semester of the academic year 2016- 2017. The control group consisted of 25 students while the experimental group had 20 students. The experimental study involved the following stages: an initial test was ap",
 author    = "NADRAG, Lavinia and BUZARNA-TIHENEA (GALBEAZA), Alina",
 number    = "2",
 title     = "COOPERATIVE TEACHING VS. TRADITIONAL TEACHING IN DEVELOPING ESP SPEAKING SKILLS. AN EXPERIMENTAL STUDY.",
 volume    = "20",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=63f189e0-b732-33e9-8144-c779339df849",
 year      = "2017",
 issn      = "23928956",
 journal   = "Scientific Bulletin 'Mircea cel Batran' Naval Academy",
 keywords  = "Teaching teams; Contextual learning; Student-centered learning; Teaching methods",
 pages     = "105-113",
 note      = "",
}

@article{7471554820120501,
 abstract  = "The article focuses on the use of computer games to encourage middle school students to participate in computer science programs. It talks about the Scalable Game Design framework utilizing systemic integration of a game-design-based computational thinking (CT) curriculum. It states that it exposed middle school students to CT concepts, motivated students to create complete games, allowed the objective measurement of CT learning objectives, and investigated pedagogical approaches and motivation.",
 author    = "",
 number    = "5",
 title     = "Programming Goes Back to School.",
 volume    = "55",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=3ad2d3c2-28f0-38ec-99a1-05879ac5fc5d",
 year      = "2012",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "Computer game programming; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); All Other Miscellaneous Schools and Instruction; Administration of Education Programs; Educational Support Services; Middle school students; Curriculum planning; Learning; Academic motivation; Computer science education; Middle school education; Education",
 pages     = "38-40",
 note      = "",
}

@article{5958255720110401,
 abstract  = "The authors opine regarding computer science curricula in U.S. high schools and they advocate for training of high school teachers in computer science via college workshops. The authors cite research documentation on the absence of student exposure to computer science and computational thinking in U.S. high schools.",
 author    = "Morreale, Patricia and Joiner, David",
 number    = "4",
 title     = "Virtual Extension: Reaching Future Computer Scientists.",
 volume    = "54",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=c6953ee1-a5e7-3996-9842-1ae86debb56f",
 year      = "2011",
 issn      = "00010782",
 journal   = "Communications of the ACM",
 keywords  = "Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Computer Training; Computer science education; Computer training; High school teachers; High school curriculum; Training",
 pages     = "122-124",
 note      = "",
}

@article{18105986520250201,
 abstract  = "Mi Superpoder es la Programación is a web tool designed to teach programming to children and young people. It focuses on developing logical thinking through interactive exercises that cover computer parts recognition, sequences, patterns, and flowcharts. The tool was developed to address the educational needs identified in the social project of the same name, where modern technologies and a serverless-based architecture were used to create an accessible and effective solution for teaching programming. Initial results indicate that students found the tool useful and demonstrated improvements in their understanding of computational logic. This analysis is framed within the global challenge of teaching programming to children and youth, demonstrating the potential of gamified tools across diverse educational contexts. Future plans include expanding the tool to incorporate more modules, allowing customization by teachers, and conducting broader evaluations in different educational environ",
 author    = "Gutiérrez Beltrán, Erika J. and Martínez Arias, Juan C.",
 number    = "null",
 title     = "Mi Superpoder es la Programación: A tool for teaching programming to children and youth.",
 volume    = "240",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=4ecf4451-a605-33df-a318-1fda9de88d33",
 year      = "2025",
 issn      = "01676423",
 journal   = "Science of Computer Programming",
 keywords  = "Syntax in programming languages; Software engineering; Computer science; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Young adults; Critical thinking",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{11887851420160101,
 abstract  = "Computer science education, as exemplified by programming, is typically first introduced to Namibian students at the first year of university education. As such, most young Namibians enter the major without any prior hands-on experience; their choice is largely dictated by second hand knowledge of the field. Additionally, secondary school instructors typically lack the technological education to facilitate introduction of programming skills in high schools. This paper describes the NAMTOSS (Namibian Technology Outreach to Secondary Schools) initiative, a pilot program aimed at addressing both of these issues. NAMTOSS has been designed as a teacher-training program with the goal of introducing computer programming skills and computational thinking to high school learners. Additionally, NAMTOSS attempts to rectify several of the structural and systemic issues raised by previously unsuccessful outreach efforts in Southern Africa.",
 author    = "Mufeti, Kauna and Mutonga, Joseph and Sverdlik, William",
 number    = "null",
 title     = "NAMTOSS: A Pilot Program Bringing Technology to Secondary Learners in Namibia.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=4d2871f8-1fe1-3b2b-b9d9-b45a6db36685",
 year      = "2016",
 issn      = "22512195",
 journal   = "Annual International Conference on Computer Science Education: Innovation &amp; Technology",
 keywords  = "Namibia; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Research and development in the  physical, engineering and life sciences; Educational Support Services; Administration of Education Programs; All Other Miscellaneous Schools and Instruction; Elementary and Secondary Schools; Other Computer Related Services; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Computer science education; Secondary education; Computer programming education; Technology education (Secondary); Teacher training; Education; Namibian students",
 pages     = "105-110",
 note      = "",
}

@article{12174328720170215,
 abstract  = "Teaching HCI in an undergraduate course for computer scientists is often a challenging experience, because the skills that characterize HCI are different from scientific and computational thinking that are the focus of most subjects of the curriculum. Often HCI teaching is organized as a set of lectures that are useful to learn concepts, but don't increase the design skills of the students. This work reports the results of an educational experience where both learners and teachers were actively involved in a process of knowledge construction and design. This process usually happens in other domains, such as architecture or industrial design, but is not part of most computer science curricula. We chose as project a challenging theme: the design of eco-feedback interfaces that inform people about the consequences of their actions for the environment and help to take decisions for lowering energy consumption. Eco-feedback interfaces are also representative of the gap between the products",
 author    = "Pittarello, Fabio and Pellegrini, Tommaso",
 number    = "4",
 title     = "HCI and education: a blended design experience.",
 volume    = "76",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=ab993e72-c8bd-3145-ab8a-7c11d985ee06",
 year      = "2017",
 issn      = "13807501",
 journal   = "Multimedia Tools &amp; Applications",
 keywords  = "Human-computer interaction; User interfaces; Energy consumption; Industrial design; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); All Other Miscellaneous Schools and Instruction; Educational Support Services; Administration of Education Programs; Design thinking; Computer science education; Education",
 pages     = "4895-4923",
 note      = "",
}

@article{12059287120170101,
 abstract  = "This paper reports the recent development and implementation of three teaching modules in order to teach and enhance the students' critical thinking skills in a level IV undergraduate/postgraduate course 'Computational Fluid Dynamics (CFD) for Engineering Applications'. These teaching modules include a lecture module, an online test module and a CFD project module. The lecture module introduces the importance of critical thinking skills by an example case, critical thinking definition and processes, and the application of critical thinking skills in formulation of CFD problems. In the online test module, seven online tests have been developed to enhance the students' understanding of the contents of lectures and practical sessions. Meanwhile, students apply their critical thinking skills to work out some of the tests. In the project module, a student-driven CFD project is designed to help students to apply CFD techniques and critical thinking skills in engineering problems. In the pro",
 author    = "Tian, Zhao F.",
 number    = "1",
 title     = "Teaching and enhancement of critical thinking skills for undergraduate students in a computational fluid dynamics course.",
 volume    = "45",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=e37cd080-79ac-34bf-b4c6-37d04701a60c",
 year      = "2017",
 issn      = "03064190",
 journal   = "International Journal of Mechanical Engineering Education",
 keywords  = "Computational fluid dynamics; Technological innovations; Critical thinking; Undergraduates; Educational surveys; Higher education",
 pages     = "76-88",
 note      = "",
}

@article{12908670920150101,
 abstract  = "",
 author    = "Rui Chang and Liehui Jiang and Hui Shu and Yaobin Xie",
 number    = "null",
 title     = "On Computation Theory Problems in Computer Science.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=8e753cfd-9ef2-3720-8b23-3671f659c06d",
 year      = "2015",
 issn      = "",
 journal   = "Industrial Engineering, Machine Design &amp; Automation (Iemda 2014) - Proceedings of the 2014 Congress &amp; Computer Science &amp; Application (Ccsa 2014) - Proceedings of the 2nd Congress",
 keywords  = "Computational complexity; Computer science; Turing machines; Approximation theory; Programming languages; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Software publishers (except video game publishers); Software Publishers",
 pages     = "257-263",
 note      = "",
}

@article{15693663020220401,
 abstract  = "Robotics activities engage students in critical and computational thinking, problem solving, and collaboration, as well as engineering and computer science. By integrating robotics into disciplinary courses, educators offer these opportunities to a wider range of students. However, teachers may be less likely to use new technology without evidence that it can support their teaching and student learning. This paper presents two descriptive case studies as a 'proof of concept' for integrating robotics construction activities into disciplinary courses. They focus on teachers' motivation for integration, and how they used robotics to support disciplinary goals.",
 author    = "Bernstein, Debra and Mutch-Jones, Karen and Cassidy, Michael and Hamner, Emily",
 number    = "2",
 title     = "Teaching with robotics: creating and implementing integrated units in middle school subjects.",
 volume    = "54",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=2f2ae2d7-e660-3a44-ba20-14c8aa8ff915",
 year      = "2022",
 issn      = "15391523",
 journal   = "Journal of Research on Technology in Education",
 keywords  = "Computer science; Problem solving; Computer engineering; Robotics; Computer systems design and related services (except video game design and development); Electronic Computer Manufacturing; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Elementary and Secondary Schools; Curriculum; Middle schools; Critical thinking",
 pages     = "161-176",
 note      = "",
}

@article{15017095220210715,
 abstract  = "Several gaps exist in the literature on coding. First, little exploration has focused on early elementary school students. In addition, close description of the overall context of coding tasks at this level is rare. Further, there is a need for both teacher and student voices around coding experiences to be heard. Moreover, a task engagement framework has not been used to evaluate the process or outcomes of early elementary coding tasks. Therefore, an exploratory holistic case study design was used to investigate student and teacher processes and outcomes of coding lessons in order to fill gaps in the literature. In this study, forty-six 2nd grade students, two teachers, and four researchers completed two one-week units on basic coding. Multiple descriptive and numeric data sources were employed to describe the process and outcomes of learning coding. Conclusions include: (1) teachers should start learning about coding first with short awareness sessions and then move to their own cla",
 author    = "Egbert, Joy and Shahrokni, Seyed Abdollah and Abobaker, Reima and Borysenko, Nataliia",
 number    = "null",
 title     = ""It's a chance to make mistakes": Processes and outcomes of coding in 2nd grade classrooms.",
 volume    = "168",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=ece1bc68-7375-31c7-ba63-8bace17fa133",
 year      = "2021",
 issn      = "03601315",
 journal   = "Computers &amp; Education",
 keywords  = "Custom Computer Programming Services; Other Computer Related Services; Computer systems design and related services (except video game design and development); School children; Distracted driving; Classrooms; Student engagement; Computer programming education",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{11981336420160101,
 abstract  = "The development of skills that allow children to perform satisfactorily in their training process and, later, in their work or social life, has become an objective for all educational and training models developed. This article deals with the relationship between thinking development skills, shared mental models and abstraction mechanisms, from a theoretical review and application with children aged between eight and twelve, from the Childprogramming methodology in a public education institution in Colombia. The results recorded at the end of the practices with this group of students, especially when assessing the progressive use of abstraction mechanisms in the Scratch environment, are presented, using the Dr. Scratch platform.",
 author    = "Zúñiga Muñoz, René Fabián and Hurtado Alegría, Julio Ariel and Rodríguez, Patricia Paderewsky",
 number    = "36",
 title     = "Discovering the mechanisms of abstraction in the performance of work teams in children to solve computational problems.",
 volume    = "14",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=895d3cf1-12e3-3961-9890-bdbd9b35bd16",
 year      = "2016",
 issn      = "16925238",
 journal   = "Sistemas &amp; Telemática",
 keywords  = "Scratch (Computer program language); United States; Administration of Education Programs; All Other Miscellaneous Schools and Instruction; Educational Support Services; Abstraction in children; Child development; Education",
 pages     = "69-87",
 note      = "",
}

@article{15322243020211201,
 abstract  = "This paper describes an educational experience realized in the form of extracurricular workshops involving music technology students of the "V. Gambara" music high school in Brescia (Italy). By means of a participatory prototyping experience, the project aimed at fostering the students awareness and understanding of technological means and their utility. The Discovery of Interactive Spaces project focuses on motion tracking technologies in connection with sound and visual production, as means to provoke reflections on their cultural and societal impact on social utility and inclusion, and artistic expression. To this end, students proposed design concepts, and prototyped sonic interactive experiences. The Discovery of Interactive Spaces is framed within the broader themes of computational thinking and creativity, learning by design, and technology awareness. These themes represent the pillars of technological citizenship, which is considered crucial for the twenty-first century studen",
 author    = "Mandanici, Marcella and Di Filippo, Roberto and Delle Monache, Stefano",
 number    = "4",
 title     = "The Discovery of Interactive Spaces: Learning by Design in High School Music Technology Classes.",
 volume    = "26",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=a879408b-30f4-37d1-89cd-400fbe74f931",
 year      = "2021",
 issn      = "22111662",
 journal   = "Technology, Knowledge &amp; Learning",
 keywords  = "Brescia (Italy); School music; Interactive learning; Social integration; Music students; Twenty-first century",
 pages     = "1131-1151",
 note      = "",
}

@article{14293114520200801,
 abstract  = "This meta-analysis maps the evidence on the effectiveness of instructional approaches and conditions for learning computer programming under three study conditions: (a) Studies focusing on the effectiveness of programming interventions per se, (b) studies focusing on the effectiveness of visualization and physicality , and (c) studies focusing on the effectiveness of dominant instructional approaches. Utilizing the data from 139 interventions and 375 effect sizes, we found (a) a strong effect of learning computer programming per se (Hedges' g ‾ = 0.81, 95% CI [0.42, 1.21]), (b) moderate to large effect sizes of visualization (g ‾ = 0.44, 95% CI [0.29, 0.58]) and physicality interventions (g ‾ = 0.72, 95% CI [0.23, 1.21]), and (c) moderate to large effect sizes for studies focusing on dominant instructional approaches (g ‾ s = 0.49–1.02). Moderator analyses indicated that the effect sizes differed only marginally between the instructional approaches and conditions—however, collaboratio",
 author    = "Scherer, Ronny and Siddiq, Fazilat and Sánchez Viveros, Bárbara",
 number    = "null",
 title     = "A meta-analysis of teaching and learning computer programming: Effective instructional approaches and conditions.",
 volume    = "109",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=aeb99f68-5724-3663-a5ba-0fda09f8b46c",
 year      = "2020",
 issn      = "07475632",
 journal   = "Computers in Human Behavior",
 keywords  = "Computer software; Computers; Meta-analysis; Systematic reviews; Computer and Computer Peripheral Equipment and Software Merchant Wholesalers; Computer and software stores; Software publishers (except video game publishers); Computer, computer peripheral and pre-packaged software merchant wholesalers; Electronic Computer Manufacturing; Computer and peripheral equipment manufacturing; Electronics Stores; Learning; Teaching methods",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{17131371920231101,
 abstract  = "Despite the significant emphasis placed on incorporating 21st century skills into the educational framework, particularly at the primary level, recent scholarly works indicate considerable variation in the implementation of these skills across different countries and regions, suggesting a demand for further research specifically focusing on primary education. The indications of the Digicomp framework and 21st-century skills in Europe have outlined the key competences for lifelong learning needed for all citizens, including teachers and students. In this perspective, Education plays a fundamental role in ensuring that citizens acquire the required skills. The objective in the common European framework is clear: to initiate a transition from the culture of knowledge to the culture of competence. Nowadays, technological advancement allows the researchers to create and combine different frameworks with the perspective of an even more tailored, and engaged education, some examples derived ",
 author    = "Benvenuti, Martina and Cangelosi, Angelo and Weinberger, Armin and Mazzoni, Elvis and Benassi, Mariagrazia and Barbaresi, Mattia and Orsoni, Matteo",
 number    = "null",
 title     = "Artificial intelligence and human behavioral development: A perspective on new skills and competences acquisition for the educational context.",
 volume    = "148",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=cd876f8c-df47-3722-b32b-9c79dce8861d",
 year      = "2023",
 issn      = "07475632",
 journal   = "Computers in Human Behavior",
 keywords  = "Augmented reality; Problem solving; User interfaces; Computer assisted instruction; Behavioral sciences; Virtual reality; Artificial intelligence; Health outcome assessment; Europe; Teaching methods; Behavior; Creative ability; Ability; Training; Conceptual structures; Learning strategies; Critical thinking; Clinical competence; Philosophy of education; Gamification; Educational outcomes; Reflection (Philosophy)",
 pages     = "N.PAG-N.PAG",
 note      = "",
}

@article{15152511920210901,
 abstract  = "The computer science (CS) unplugged approach intends to teach CS concepts and computational thinking skills without employing any digital tools. The current study conducted a systematic literature review to analyze research studies that conducted investigations related to implementations of CS unplugged activities. A systematic review procedure was developed and applied to detect and subsequently review relevant research studies published from 2010 to 2019. It was found that 55 research studies (17 articles + 38 conference proceedings) satisfied the inclusion criteria for the analysis. These research studies were then examined with regard to their demographic characteristics, research methodologies, research results, and main findings. It was found that the unplugged approach was realized and utilized differently among researchers. The majority of the studies used the CS unplugged term when referring to "paper–pencil activities," "problem solving," "storytelling," "games," "tangible p",
 author    = "Battal, Ali and Afacan Adanır, Gülgün and Gülbahar, Yasemin",
 number    = "1",
 title     = "Computer Science Unplugged: A Systematic Literature Review.",
 volume    = "50",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=8b08ae2f-5bed-3342-bc98-a4338df6e775",
 year      = "2021",
 issn      = "00472395",
 journal   = "Journal of Educational Technology Systems",
 keywords  = "Computer science; Digital storytelling; Problem solving; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Research and development in the  physical, engineering and life sciences; Demographic characteristics; Concept learning",
 pages     = "24-47",
 note      = "",
}

@article{10365717920150101,
 abstract  = "This report entangles the endeavors undertaken during the IOI Workshop "Creating an International Informatics Curriculum for Primary and High School Education". Considering the need to discuss the role of informatics in the primary and secondary education, the Workshop participants tried to encapsulate several activities that might give insight on how to treat this issue with success. An overview of the current situation with the informatics education in thirteen countries was presented. Further, a group work took place considering relevant topics in creating informatics curricula and computational thinking. A fruitful discussion that considered establishing guidelines and further steps in creating informatics curricula and some ways to promote informatics concluded the Workshop.",
 author    = "ACKOVSKA, Nevena and ERDŐSNÉ NÉMETH, Ágnes and STANKOV, Emil and JOVANOV, Mile",
 number    = "null",
 title     = "Report of the IOI Workshop "Creating an International Informatics Curriculum for Primary and High School Education".",
 volume    = "9",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=39bf1e4f-c1a0-3456-b6c9-a8d1983ba75c",
 year      = "2015",
 issn      = "18227732",
 journal   = "Olympiads in Informatics",
 keywords  = "Computer science; Information science; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Elementary and Secondary Schools; Curriculum; Elitism in education; Secondary education",
 pages     = "205-212",
 note      = "",
}

@article{16286730520230403,
 abstract  = "The article reports that education is no longer a one-size-fits-all model, and edtech startups are revolutionising the way students learn. It mentions Vedantu is offering free online classes on its website and through its app in order to keep students safe inside their homes. It also mentions online classes can be accessed via their website and on their app that is available for free on Android and iOS and cutting-edge skills like design thinking, computational thinking.",
 author    = "",
 number    = "null",
 title     = ""Revolutionising Education: 4 Edtech Startups Empowering Personalized Learning for Students from K12 segment!".",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=5bace4ad-c7fa-3cdc-a2da-926de31d11ed",
 year      = "2023",
 issn      = "",
 journal   = "Techtree.com",
 keywords  = "Educational technology; Websites; Vedantu Innovations Pvt. Ltd.; Internet Publishing and Broadcasting and Web Search Portals; New business enterprises; Android (Operating system)",
 pages     = "1-1",
 note      = "",
}

@article{13692925120190611,
 abstract  = "The article offers information on the regional differences in the Great Britain computing curriculum. It mentions the most beneficial thing is to look at raw skills and different ways of thinking rather than knowledge-based stuff; and also mentions the views of Elizabeth Tweedale, chief executive of coding education startup Cypher, the most important thing is to have an understanding of the basics of computer science and computational thinking and to apply that in the real world.",
 author    = "Everett, Cath",
 number    = "null",
 title     = "REGIONAL DIFFERENCES IN THE UK'S COMPUTING CURRICULUM.",
 volume    = "null",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=ae4ad3fe-0f27-3d91-93e4-570ec1a19578",
 year      = "2019",
 issn      = "00104787",
 journal   = "Computer Weekly",
 keywords  = "Computer science; Problem solving; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); National Curriculum (Great Britain); National educational standards; Tweedale, Elizabeth",
 pages     = "24-30",
 note      = "",
}

@article{12039281720170301,
 abstract  = "Students in secondary education strive hard enough to understand basic programming concepts. With all that is known regarding the benefits of programming, little is the published evidence showing how high school students can learn basic programming concepts following innovative instructional formats correctly with the respect to gain/enhance their computational thinking skills. This distinction has caused lack of their motivation and interest in Computer Science courses. This case study presents the opinions of twenty-eight (n = 28) high school students who participated voluntarily in a 3D-game-like environment created in Second Life. This environment was combined with the 2D programming environment of Scratch4SL for the implementation of programming concepts (i.e. sequence and concurrent programming commands) in a blended instructional format. An instructional framework based on Papert's theory of Constructionism to assist students how to coordinate or manage better the learning mate",
 author    = "Pellas, Nikolaos and Peroutseas, Efstratios",
 number    = "1",
 title     = "Leveraging Scratch4SL and Second Life to motivate high school students’ participation in introductory programming courses: findings from a case study.",
 volume    = "23",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=2fa252d4-4705-37f1-a611-ae6f92a647a6",
 year      = "2017",
 issn      = "13614568",
 journal   = "New Review of Hypermedia &amp; Multimedia",
 keywords  = "Programming languages; Virtual prototypes; Scratch (Computer program language); Computer programming; Graphical user interfaces; Administration of Education Programs; All Other Miscellaneous Schools and Instruction; Educational Support Services; Elementary and Secondary Schools; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Other Computer Related Services; Software Publishers; Software publishers (except video game publishers); Secondary education; Education",
 pages     = "51-79",
 note      = "",
}

@article{11930970320161201,
 abstract  = "Recent government moves in many countries have seen coding included in school curricula, or promoted as part of computing, mathematics or science programmes. While these moves have generally been associated with a need to engage more young people in technology study, research has hinted at possible benefits from learning to program including fostering general thinking skills. However, little research has been carried out exploring these ideas. This study analysed data collected while 5- and 6-year-old students in a New Zealand primary school were using Scratch Jnr. to learn about basic shapes, as part of a numeracy topic. Analysis combined Brennan and Resnick's (2012) computational thinking skills framework and Krathwohl's (2002) revision of Bloom's Taxonomy to evaluate any role general thinking skills played in these students' coding work. Results suggest including basic coding in primary curricula provides teachers with an effective means of exercising their students' general and hi",
 author    = "Falloon, G.",
 number    = "6",
 title     = "An analysis of young students' thinking when completing basic coding tasks using Scratch Jnr. On the iPad.",
 volume    = "32",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=9814bb2b-0661-3eeb-b1db-f88104291169",
 year      = "2016",
 issn      = "02664909",
 journal   = "Journal of Computer Assisted Learning",
 keywords  = "Computational learning theory; Cognition; Computer software; Pocket computers; Programming languages; Medical coding; New Zealand; Computer, computer peripheral and pre-packaged software merchant wholesalers; Computer and Computer Peripheral Equipment and Software Merchant Wholesalers; Computer and software stores; Software publishers (except video game publishers); Other Computer Related Services; Computer systems design and related services (except video game design and development); Custom Computer Programming Services; Software Publishers; Computer programming education; School children; Elementary education; Bloom's taxonomy; Curriculum; Conceptual structures; Learning strategies; Children",
 pages     = "576-593",
 note      = "",
}

@article{15155270420210401,
 abstract  = "Incorporating computer science (CS) into K–12 education has been highlighted in recent years as an important way to promote computational thinking skills. The aim of this study was to investigate teachers' experiences with a new CS curriculum and address challenges to teachers during implementation. This study was designed to evaluate CS curriculum implementation in order to inform CS practices. Interview and survey data were collected and analyzed. Findings showed that teachers had high confidence in teaching CS; however, they sought professional development to acquire content knowledge and instructional strategies to effectively engage students in learning. As for the curriculum and students, the scope of the curriculum needed to be adjusted along with students' prerequisite skills and knowledge. As for the context, some schools did not have appropriate facilities. Recommendations for implementing CS curricula and implications are discussed.",
 author    = "Shin, Suhkyung and Cheon, Jongpil and Shin, Sungwon",
 number    = "2",
 title     = "Teachers' Perceptions of First-Year Implementation of Computer Science Curriculum in Middle School: How We Can Support CS Initiatives.",
 volume    = "38",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=3d77464c-ce06-318e-a60b-aacac8048bef",
 year      = "2021",
 issn      = "07380569",
 journal   = "Computers in the Schools",
 keywords  = "Computer science; Professional and Management Development Training; Vocational Rehabilitation Services; Research and development in the  physical, engineering and life sciences; Research and Development in the Physical, Engineering, and Life Sciences (except Biotechnology); Elementary and Secondary Schools; Middle schools; Curriculum implementation; Teachers; Career development; Curriculum",
 pages     = "98-124",
 note      = "",
}

@article{14906010220210101,
 abstract  = "Currently, there is a big gap between industry and the instructions provided by engineers at the University. Manufacturing companies need engineers with specific profiles and skills in machining. Teachers, who face both worlds, must play an active role in shortening the transition times of students. Recently, barrel-end mills have been the focus of attention of toolmakers and manufacturers due to their excellent production times and surface accuracies. They are outstanding competitors to more traditional ball-end mills in some applications. This study raises the challenge of translating the developed work for this kind of tool from the research domain into the classroom at the University. For this, a software tool proBARR© was developed and used for learning of the subject of manufacturing. This educational software is capable of predicting cutting forces and surface topography in milling with barrel-end mills and was successfully introduced as part of the students' learning process. ",
 author    = "Urbikain, Gorka and López de Lacalle, Luis Norberto",
 number    = "1",
 title     = "Bridging the gap between student instruction and advanced research: Educational software tool for manufacturing learning.",
 volume    = "29",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=9fef4284-624e-3b24-8623-d647164413f1",
 year      = "2021",
 issn      = "10613773",
 journal   = "Computer Applications in Engineering Education",
 keywords  = "Software development tools; Problem solving; Milling (Metalwork); Custom Computer Programming Services; Computer systems design and related services (except video game design and development); All Other Miscellaneous Schools and Instruction; Educational Support Services; Administration of Education Programs; Process, Physical Distribution, and Logistics Consulting Services; Education research; Surface topography; Learning; Production planning",
 pages     = "274-286",
 note      = "",
}

@article{14519760620201201,
 abstract  = "Courses on computer programming are included in the curricula of almost all engineering disciplines. We surveyed the research literature and identified the techniques that are commonly used by instructors for teaching these courses. We observed that visual programming and game-based learning can enhance computational thinking and problem-solving skills in students and may be used to introduce them to programming. Robot programming may be used to attract students to programming, but the success of this technique is subjected to the availability of robots. Pair and collaborative programming allows students to learn from one another and write efficient programs. Assessment systems help instructors in evaluating programs written by students and provide them with timely feedback. Furthermore, an analysis of citations showed that Scratch is the most researched tool for teaching programming. We discuss how these techniques may be used to teach introductory courses, advanced courses, and mass",
 author    = "Kanika and Chakraverty, Shampa and Chakraborty, Pinaki",
 number    = "2",
 title     = "Tools and Techniques for Teaching Computer Programming: A Review.",
 volume    = "49",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=76fbc2a6-28c1-39cf-8b28-f73cb666b3f1",
 year      = "2020",
 issn      = "00472395",
 journal   = "Journal of Educational Technology Systems",
 keywords  = "Computer programming; Robot programming; Other Computer Related Services; Custom Computer Programming Services; Computer systems design and related services (except video game design and development); Teaching methods; Massive open online courses; Authorship",
 pages     = "170-198",
 note      = "",
}

@article{14424255620200701,
 abstract  = "There is a saying, "Everything changes, but nothing changes." We are realizing a rapid technological revolution in the development, deployment, and application of computing technologies within every discipline and every sector of society. Yet, our ability to respond to the well-documented need for a large, diverse, computationally literate workforce remains a challenge. We summarize our 35 years of lessons learned for preparing the workforce that can inform efforts to address this challenge. We have pursued a multiprong approach to reach instructors, researchers, professionals, and students on a national scale. Our efforts in scaling up and sustaining activities range from teaching computational thinking through imparting HPC skills. We have been able to scale up these activities through community efforts to share, cooperate, and collaborate. The potential for providing life-long learning to everyone wishing to expand their computational knowledge and skills is greater than any organi",
 author    = "Lathrop, Scott A. and Cahill, Katharine and Gordon, Steven I. and Houchins, Jennifer and Panoff, Robert M. and Weeden, Aaron",
 number    = "4",
 title     = "Preparing a Computationally Literate Workforce.",
 volume    = "22",
 url       = "https://research.ebsco.com/linkprocessor/plink?id=ad3664a0-dcd3-399f-9003-d2d8e32a1177",
 year      = "2020",
 issn      = "15219615",
 journal   = "Computing in Science &amp; Engineering",
 keywords  = "Technological revolution; Scientific computing; Temporary Help Services; Labor supply",
 pages     = "7-16",
 note      = "",
}

